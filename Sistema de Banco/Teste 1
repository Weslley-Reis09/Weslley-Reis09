#include <stdio.h>
#include <string.h>

#define MAX_CLIENTES 5

typedef struct {
    char nome[100];
    char cpf[12];
    float saldo;
} Cliente;

Cliente clientes[MAX_CLIENTES];
int total_clientes = 0;

void inserir_cliente() {
    if (total_clientes < MAX_CLIENTES) {
        printf("Digite o nome do cliente: ");
        fgets(clientes[total_clientes].nome, 100, stdin);
        clientes[total_clientes].nome[strcspn(clientes[total_clientes].nome, "\n")] = '\0';

        printf("Digite o CPF do cliente (xxx.xxx.xxx-xx): ");
        fgets(clientes[total_clientes].cpf, 12, stdin);
        clientes[total_clientes].cpf[strcspn(clientes[total_clientes].cpf, "\n")] = '\0';

        printf("Digite o saldo inicial: ");
        scanf("%f", &clientes[total_clientes].saldo);
        getchar();

        total_clientes++;
    } else {
        printf("Número máximo de clientes alcançado.\n");
    }
}

void listar_clientes() {
    for (int i = 0; i < total_clientes; i++) {
        printf("Nome: %s, CPF: %s, Saldo: %.2f\n", clientes[i].nome, clientes[i].cpf, clientes[i].saldo);
    }
}

int encontrar_cliente_por_cpf(const char *cpf) {
    for (int i = 0; i < total_clientes; i++) {
        if (strcmp(clientes[i].cpf, cpf) == 0) {
            return i;
        }
    }
    return -1;
}

void alterar_saldo() {
    char cpf[12];
    printf("Digite o CPF do cliente para alterar o saldo: ");
    fgets(cpf, 12, stdin);
    cpf[strcspn(cpf, "\n")] = '\0';

    int index = encontrar_cliente_por_cpf(cpf);
    if (index != -1) {
        printf("Digite o novo saldo: ");
        scanf("%f", &clientes[index].saldo);
        getchar();
    } else {
        printf("Cliente não encontrado.\n");
    }
}

void alterar_cpf() {
    char cpf_antigo[12], cpf_novo[12];
    printf("Digite o CPF atual do cliente: ");
    fgets(cpf_antigo, 12, stdin);
    cpf_antigo[strcspn(cpf_antigo, "\n")] = '\0';

    int index = encontrar_cliente_por_cpf(cpf_antigo);
    if (index != -1) {
        printf("Digite o novo CPF: ");
        fgets(cpf_novo, 12, stdin);
        cpf_novo[strcspn(cpf_novo, "\n")] = '\0';

        strcpy(clientes[index].cpf, cpf_novo);
    } else {
        printf("Cliente não encontrado.\n");
    }
}

void alterar_nome() {
    char cpf[12], nome_novo[100];
    printf("Digite o CPF do cliente para alterar o nome: ");
    fgets(cpf, 12, stdin);
    cpf[strcspn(cpf, "\n")] = '\0';

    int index = encontrar_cliente_por_cpf(cpf);
    if (index != -1) {
        printf("Digite o novo nome: ");
        fgets(nome_novo, 100, stdin);
        nome_novo[strcspn(nome_novo, "\n")] = '\0';

        strcpy(clientes[index].nome, nome_novo);
    } else {
        printf("Cliente não encontrado.\n");
    }
}
